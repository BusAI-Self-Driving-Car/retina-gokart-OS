// code by jph, gjoel
package ch.ethz.idsc.retina.lidar;

import ch.ethz.idsc.retina.util.math.SI;
import ch.ethz.idsc.tensor.Tensor;
import ch.ethz.idsc.tensor.Tensors;
import ch.ethz.idsc.tensor.qty.Quantity;

/** events generated by lidar */
public class LidarXYZEvent extends LidarSpacialEvent {

  /** @param usec timestamp of event in [us]
   * @param coords spacial coordinates in [m] when coords.length == 3 then coordinates are x,y,z
   * when coords.length == 2 then coordinates are x,y
   * @param intensity intensity of reflection [0, 1, ..., 255] 255 == most intensive return */
  public LidarXYZEvent(int usec, float[] coords, byte intensity) {
    super(usec, coords, intensity);
  }

  public Tensor getXY() {
    return Tensors.of(Quantity.of(coords[0], SI.METER), Quantity.of(coords[1], SI.METER));
  }
}
