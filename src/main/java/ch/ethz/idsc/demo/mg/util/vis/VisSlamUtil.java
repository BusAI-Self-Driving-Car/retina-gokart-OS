// code by mg
package ch.ethz.idsc.demo.mg.util.vis;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.util.Arrays;

import ch.ethz.idsc.demo.mg.slam.SlamParticle;
import ch.ethz.idsc.demo.mg.slam.algo.SlamProvider;
import ch.ethz.idsc.demo.mg.slam.vis.SlamMapFrame;
import ch.ethz.idsc.demo.mg.util.slam.SlamParticleUtil;
import ch.ethz.idsc.gokart.core.pos.GokartPoseInterface;

// provides slam visualization static methods
public enum VisSlamUtil {
  ;
  /** overlays e.g. go kart pose onto the maps generated by SLAM algorithm
   * 
   * @param slamMapFrames contain the SLAM maps
   * @param slamProvider
   * @param gokartLidarPose
   * @param lidarMappingMode SLAM algorithm parameter
   * @return array of frames */
  public static BufferedImage[] constructFrames(SlamMapFrame[] slamMapFrames, SlamProvider slamProvider, GokartPoseInterface gokartLidarPose,
      boolean lidarMappingMode) {
    slamMapFrames[0].setRawMap(slamProvider.getMap(0));
    slamMapFrames[0].addGokartPose(gokartLidarPose.getPose(), Color.BLACK);
    if (!lidarMappingMode)
      drawParticlePoses(slamMapFrames, slamProvider);
    slamMapFrames[0].addGokartPose(slamProvider.getPoseInterface().getPose(), Color.BLUE);
    slamMapFrames[1].setProcessedMat(slamProvider.getProcessedMat());
     slamMapFrames[1].setWayPoints(slamProvider.getWayPoints());
    slamMapFrames[1].addGokartPose(slamProvider.getPoseInterface().getPose(), Color.BLUE);
    BufferedImage[] combinedFrames = new BufferedImage[3];
    for (int i = 0; i < 3; i++)
      combinedFrames[i] = slamMapFrames[i].getFrame();
    return combinedFrames;
  }

  /** overlays poses of particles with highest likelihood onto slamMapFrame
   * 
   * @param slamMapFrames
   * @param slamProvider */
  private static void drawParticlePoses(SlamMapFrame[] slamMapFrames, SlamProvider slamProvider) {
    SlamParticle[] slamParticles = slamProvider.getParticles();
    int partNumber = slamParticles.length / 3;
    Arrays.sort(slamParticles, 0, partNumber, SlamParticleUtil.SlamCompare);
    for (int i = 0; i < partNumber; i++) {
      slamMapFrames[0].addGokartPose(slamParticles[i].getPose(), Color.RED);
    }
  }
}
